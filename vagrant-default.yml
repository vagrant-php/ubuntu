---
hostname: projectname.development

cpus: ~
memory: 1024
disksize: 10GB # 10GB is vagrant default;   to decrease: vagrant destroy;   to increase: vagrant halt; vagrant up;

box: generic/ubuntu2004 # needs to be ubuntu 20.04 based

# network: -------------------------------------------------------------------------------------------------------------

network:
    forwarded_ports:
        ssh:
            host: ephemeral
            guest: 22
#        http:
#            host: 8080
#            guest: 80
#        https:
#            host: 8443
#            guest: 443
    ip: 10.10.10.10

# nfs: -----------------------------------------------------------------------------------------------------------------

nfsoptions:
    udp: false
    mount_options: []
    bsd: [alldirs]
    linux: [rw,no_subtree_check,all_squash,async]

# bindmounts: ----------------------------------------------------------------------------------------------------------

bindmounts: []
#    - /var

# virtualbox: ----------------------------------------------------------------------------------------------------------

virtualbox:
    bsd:
        audio: none
        boot1: disk
        boot2: none
        natdnshostresolver1: 'off'
        natdnsproxy1: 'off'
        nictype1: virtio
        nictype2: virtio
        vrde: 'off'
    darwin:
        audio: none
        boot1: disk
        boot2: none
        natdnshostresolver1: 'off'
        natdnsproxy1: 'off'
        nictype1: virtio
        nictype2: virtio
        vrde: 'off'
    linux:
        audio: none
        boot1: disk
        boot2: none
        natdnshostresolver1: 'off'
        natdnsproxy1: 'off'
        nictype1: virtio
        nictype2: virtio
        vrde: 'off'
    windows:
        audio: none
        boot1: disk
        boot2: none
        natdnshostresolver1: 'off'
        natdnsproxy1: 'off'
        vrde: 'off'

# role: ----------------------------------------------------------------------------------------------------------------

role:
    blackfire: false
    clamav: false
    docker: false
    elasticsearch: false
    kafka: false
    mariadb: false
    memcached: false
    mongodb: false
    nginx: false
    nodejs: false
    postfix: false
    postgresql: false
    rabbitmq: false
    redis: false

# general: -------------------------------------------------------------------------------------------------------------

general:
    config:
        locale: de_CH.UTF-8
        keyboard:
            layout: ch
            variant: de_nodeadkeys
        shell: bash # bash or zsh
        timezone: Europe/Zurich
    packages:
        - htop
        - openjdk-11-jdk-headless
        - unzip
        - vim

# bash: ----------------------------------------------------------------------------------------------------------------

bash:
    config:
        alias:
            cls: &cls 'printf "\033c"'
            showdns: &showdns 'dig $1 any +nocmd +multiline +noall +answer'
            whichshell: &whichshell 'ps -p $$'
        export:
            CLICOLOR: 1
            EDITOR: &editor vim
            HISTCONTROL: 'ignoreboth:erasedups'
            HISTFILE: ~/.bash_history
            HISTFILESIZE: &histfilesize 100000
            HISTSIZE: &histsize 5000
            PATH: '/home/vagrant/.composer/vendor/bin:$PATH'
            PS1: >
                '\[\e[1;32m\]\h\[\e[0m\] \[\e[1;37m\]\w\[\e[0m\] \[\e[3m\]($(git rev-parse --abbrev-ref HEAD 2> /dev/null))\[\e[23m\] \[\e[1;32m\]\u\[\e[0m\] '
        shopt:
            checkwinsize: true
            histappend: true

# blackfire: -----------------------------------------------------------------------------------------------------------

blackfire:
    config:
        agent:
            ca-cert: ~
            collector: https://blackfire.io
            http-proxy: ~
            https-proxy: ~
            log-file: stderr
            log-level: 1
            server-id: ~
            server-token: ~
            socket: unix:///var/run/blackfire/agent.sock
            spec: ~
        client:
            ca-cert: ~
            client-id: ~
            client-token: ~
            endpoint: https://blackfire.io
            http-proxy: ~
            https-proxy: ~
            timeout: 15s

# clamav: --------------------------------------------------------------------------------------------------------------

clamav:
    config:
        DatabaseDirectory: /var/lib/clamav
        FixStaleSocket: true
        LocalSocket: /var/run/clamav/clamd.ctl
        LocalSocketGroup: clamav
        LocalSocketMode: 666
        LogFile: /var/log/clamav/clamav.log
        MaxFileSize: 32M
        MaxScanSize: 32M
        PCREMaxFileSize: 32M
        StreamMaxLength: 32M
        TCPSocket: 3310
        User: clamav

# elasticsearch: -------------------------------------------------------------------------------------------------------

elasticsearch:
    version: 7
    jvm:
        options:
            Xms: 128m
            Xmx: 128m
    config:
        http.port: 9200
        path.data: /var/lib/elasticsearch
        path.logs: /var/log/elasticsearch
    kibana:
        config:
            server.host: 0.0.0.0
            server.port: 5601
        plugins: []
    plugins: []

# git: -----------------------------------------------------------------------------------------------------------------

git:
    config:
        alias:
            pp: "!'git pull -v; git push -v'"
            ppt: "!'git pull -v; git push -v; git push --tags -v'"
        core:
            editor: vim
        push:
            default: simple
        tag:
            sort: "version:refname"
#        user:
#            name: "'Firstname Lastname'"
#            email: firstname.lastname@domain.tld

# kafka: ---------------------------------------------------------------------------------------------------------------

kafka:
    version: 2.5.0
    scala: 2.12
    config:
        broker.id: 0
        log.dirs: /var/log/kafka
        log.retention.check.interval.ms: 300000
        log.retention.hours: 168
        log.segment.bytes: 1073741824
        num.io.threads: 8
        num.network.threads: 3
        num.partitions: 1
        num.recovery.threads.per.data.dir: 1
        offsets.topic.replication.factor: 1
        socket.receive.buffer.bytes: 102400
        socket.request.max.bytes: 104857600
        socket.send.buffer.bytes: 102400
        transaction.state.log.min.isr: 1
        transaction.state.log.replication.factor: 1
        zookeeper.connect: localhost:2181
        zookeeper.connection.timeout.ms: 6000
    zookeeper:
        config:
            clientPort: 2181
            dataDir: /var/lib/kafka/zookeeper
            maxClientCnxns: 0

# mariadb: -------------------------------------------------------------------------------------------------------------

mariadb:
    version: 10.3
    username: root
    password: root
    config:
        client:
            default-character-set: utf8
            port: 3306
            socket: /var/run/mysqld/mysqld.sock
        mysqld:
            character-set-server: utf8
            datadir: /var/lib/mysql
            log_error: /var/log/mysql/error.log
            pid-file: /var/run/mysqld/mysqld.pid
            port: 3306
            socket: /var/run/mysqld/mysqld.sock

# memcached: -----------------------------------------------------------------------------------------------------------

memcached:
    config:
        -d: ''
        logfile: /var/log/memcached.log
        -m: 64
        -p: 11211
        -u: memcache
        -l: 127.0.0.1
        -P: /var/run/memcached/memcached.pid

# mongodb: -------------------------------------------------------------------------------------------------------------

mongodb:
    version: 4.2
    username: root
    password: root
    config:
        net:
            port: 27017
            unixDomainSocket:
                enabled: true
                pathPrefix: /tmp
        security:
            authorization: enabled
        storage:
            dbPath: /var/lib/mongodb
        systemLog:
            destination: file
            path: /var/log/mongodb/mongodb.log
            logAppend: true

# nginx: ---------------------------------------------------------------------------------------------------------------

nginx:
    config:
        user: vagrant vagrant
        worker_processes: 4
        error_log: /var/log/nginx/error.log
        pid: /var/run/nginx.pid
        events:
            worker_connections: 1024
        http:
            include: ['mime.types']
            charset: utf-8
            gzip: 'on'
            sendfile: 'off'
            client_max_body_size: 50M
            server: []
    server: []
        # -
        #     root: /vagrant
        #     server_name: project.development
        #     template: default
    snippets:
        php: &nginx_php
            try_files: '$uri =404'
            fastcgi_split_path_info: '^(.+\.php)(/.+)$'
            include: fastcgi_params
            fastcgi_param:
                - 'SCRIPT_FILENAME $document_root$fastcgi_script_name'
                - 'SCRIPT_NAME $fastcgi_script_name'
            fastcgi_index: index.php
            fastcgi_pass: 'unix://var/run/php/default.sock'
            fastcgi_read_timeout: 600
    templates:
        default:
            listen: [80, 443 ssl http2]
            index: index.php
            'location /':
                try_files: '$uri /index.php$is_args$args'
            'location ~ \.php': *nginx_php
        bolt3:
            listen: [80, 443 ssl http2]
            index: index.php
            'location /':
                try_files: '$uri /index.php$is_args$args'
            'location ~ \.php': *nginx_php
            'location = /bolt':
                try_files: '$uri /index.php$is_args$args'
            'location ^~ /bolt/':
                try_files: '$uri /index.php$is_args$args'
            'location ^~ /thumbs':
                try_files: '$uri /index.php'
                access_log: off
                log_not_found: off
                expires: max
                add_header:
                    - 'Pragma public'
                    - 'Cache-Control "public, mustrevalidate, proxy-revalidate"'
                    - 'X-Koala-Status sleeping'
            'location ~* ^.+\.(?:atom|bmp|bz2|css|doc|eot|exe|gif|gz|ico|jpe?g|jpeg|jpg|js|map|mid|midi|mp4|ogg|ogv|otf|png|ppt|rar|rtf|svg|svgz|tar|tgz|ttf|wav|woff|xls|zip)$':
                access_log: off
                log_not_found: off
                expires: max
                add_header:
                    - 'Pragma public'
                    - 'Cache-Control "public, mustrevalidate, proxy-revalidate"'
                    - 'X-Koala-Status eating'
            'location = /(?:favicon.ico|robots.txt)':
                log_not_found: off
                access_log: off
            'location ~ /index.php/(.*)':
                rewrite:
                    - '^/index.php/(.*) /$1 permanent'
            'location ~ /\.':
                deny: all
            'location ~ /\.(htaccess|htpasswd)$':
                deny: all
            'location ~ /\.(?:db)$':
                deny: all
            'location ~* /(.*)\.(?:markdown|md|twig|yaml|yml)$':
                deny: call

# nodejs: --------------------------------------------------------------------------------------------------------------

nodejs:
    version: 14

# php: -----------------------------------------------------------------------------------------------------------------

php:
    version: 7.4
    config:
        cli:
            php:
                max_execution_time: 0
                memory_limit: -1
                error_reporting: E_ALL
                display_errors: On
                display_startup_errors: On
                log_errors: On
                error_log: /var/log/php-cli.err.log
                magic_quotes_runtime: Off
                default_charset: utf-8
                allow_url_fopen: On
                allow_url_include: Off
            date:
                date.timezone: Europe/Zurich
            intl:
                intl.default_locale: de_CH.UTF-8
            mysql:
                mysql.default_port: 3306
                mysql.default_socket: /var/run/mysqld/mysqld.sock
            mysqli:
                mysqli.default_port: 3306
                mysqli.default_socket: /var/run/mysqld/mysqld.sock
            pdo_mysql:
                pdo_mysql.default_socket: /var/run/mysqld/mysqld.sock
            session:
                session.gc_probability: 0
            xdebug:
                xdebug.max_nesting_level: 1024
                xdebug.remote_autostart: On # xdebug 2.x
                xdebug.remote_enable: On # xdebug 2.x
                xdebug.start_with_request: On
                xdebug.mode: debug
        fpm:
            php:
                max_execution_time: 600
                max_input_time: 600
                memory_limit: 256M
                error_reporting: E_ALL
                display_errors: On
                display_startup_errors: On
                log_errors: On
                error_log: /var/log/php-fpm.err.log
                post_max_size: 50M
                magic_quotes_gpc: Off
                magic_quotes_runtime: Off
                default_charset: utf-8
                cgi.fix_pathinfo: Off
                upload_max_filesize: 50M
                allow_url_fopen: On
                allow_url_include: Off
            date:
                date.timezone: Europe/Zurich
            intl:
                intl.default_locale: de_CH.UTF-8
            mysql:
                mysql.default_port: 3306
                mysql.default_socket: /var/run/mysqld/mysqld.sock
            mysqli:
                mysqli.default_port: 3306
                mysqli.default_socket: /var/run/mysqld/mysqld.sock
            pdo_mysql:
                pdo_mysql.default_socket: /var/run/mysqld/mysqld.sock
            session:
                session.gc_probability: 0
            xdebug:
                xdebug.max_nesting_level: 1024
                xdebug.remote_autostart: On # xdebug 2.x
                xdebug.remote_enable: On # xdebug 2.x
                xdebug.remote_connect_back: On # xdebug 2.x
                xdebug.start_with_request: On
                xdebug.mode: debug
                xdebug.discover_client_host: On
        php_fpm:
            default:
                user: vagrant
                group: vagrant
                listen: /var/run/php/default.sock
                listen.owner: vagrant
                listen.group: vagrant
                pm: dynamic
                pm.max_children: 10
                pm.start_servers: 2
                pm.min_spare_servers: 1
                pm.max_spare_servers: 4
                pm.max_requests: 400
                request_terminate_timeout: 600
    modules: []
        # - php7.4-gd
        # - php-xdebug
    pecl: []
        # - swoole
    composer:
        version: 2.2.7
        json:
            require: {}
                #friendsofphp/php-cs-fixer: '^2.27.1'

# postfix: -------------------------------------------------------------------------------------------------------------

postfix:
    config:
        inet_interfaces: loopback-only
        myhostname: localhost
    receiver: firstname.lastname@hostname.tld

# postgresql: ----------------------------------------------------------------------------------------------------------

postgresql:
    version: 12
    username: root
    password: root
    config:
        data_directory: /var/lib/postgresql/___VERSION___/main
        external_pid_file: /var/run/postgresql/___VERSION___-main.pid
        hba_file: /etc/postgresql/___VERSION___/main/pg_hba.conf
        ident_file: /etc/postgresql/___VERSION___/main/pg_ident.conf
        lc_messages: de_CH.UTF-8
        lc_monetary: de_CH.UTF-8
        lc_numeric: de_CH.UTF-8
        lc_time: de_CH.UTF-8
        log_directory: /var/log/postgresql
        log_timezone: Europe/Zurich
        port: 5432
        shared_buffers: 128MB
        timezone: Europe/Zurich
        unix_socket_directories: /var/run/postgresql

# rabbitmq: ------------------------------------------------------------------------------------------------------------

rabbitmq:
    username: root
    password: root
    config:
        listeners.tcp.default: 5672
        log.dir: /var/log/rabbitmq
        log.file: rabbit.log
    plugins: []

# redis: ---------------------------------------------------------------------------------------------------------------

redis:
    config:
        daemonize: yes
        dir: /var/lib/redis
        logfile: /var/log/redis/redis-server.log
        loglevel: notice
        pidfile: /var/run/redis/redis-server.pid
        port: 6379
        unixsocket: /var/run/redis/redis.sock

# zsh: ----------------------------------------------------------------------------------------------------------------

zsh:
    config:
        alias:
            cls: *cls
            showdns: *showdns
            whichshell: *whichshell
        export:
            EDITOR: *editor
            HISTFILE: ~/.zsh_history
            HISTSIZE: *histsize
            PATH: '/home/vagrant/.composer/vendor/bin:$PATH'
            PROMPT: >
                '%{$fg_bold[green]%}%m%{$reset_color%} %{$fg_bold[white]%}%~%{$reset_color%} ($(git symbolic-ref --short HEAD 2> /dev/null)) %{$fg_bold[green]%}%n%{$reset_color%} % '
            SAVEHIST: *histfilesize
        setopt:
            HIST_EXPIRE_DUPS_FIRST: true
            HIST_IGNORE_DUPS: true
            HIST_IGNORE_SPACE: true
            INC_APPEND_HISTORY: true
            PROMPT_SUBST: true

# include project specific roles related to PROJECT_ROOT: eg. ansible_roles/dependencies/main.yml ----------------------
include_roles: []
